#include <stdio.h>
struct pro
{
  int pid,mem,flag;
}p[20],m[20],temp;

int i,j,n,N;

void allo()
{ 
  for(i=0;i<20;i++)
   {
    p[i].flag=0;m[i].flag=0;
   }

  for(i=0;i<n;i++)
   for(j=0;j<N;j++)
    {   
      if(m[j].flag)
          continue;
      if(p[i].mem<=m[j].mem)
        {
          p[i].flag=1;
          m[j].pid=p[i].pid;
          m[j].flag=1;
          break; 
        }   
    }

 printf("\nProcess allocated : ");
 printf("\n");
 for(i=0;i<N;i++)
  if(m[i].flag)
   {
    printf("\n Process %d  to   %d sized memory  ",m[i].pid,m[i].mem);
   }
 printf("\nProcess not allocated : ");
 printf("\n");
 for(i=0;i<n;i++)
  if(p[i].flag==0)
   printf("\n P%d",p[i].pid);
}

void sort_as()
{
  for(i=0;i<n;i++)
   for(j=i;j<n;j++)
     {
       if(p[i].mem>p[j].mem)
       
         {
           temp=p[j];
           p[j]=p[i];
           p[i]=temp;
         }
     }
  for(i=0;i<N;i++)
   for(j=i;j<N;j++)
     {
       if(m[i].mem>m[j].mem)
         {
           temp=m[j];
           m[j]=m[i];
           m[i]=temp;
         }
     }
}
void sort_de()
{
  for(i=0;i<n;i++)
   for(j=i;j<n;j++)
     {
       if(p[i].mem>p[j].mem)
         {
           temp=p[j];
           p[j]=p[i];
           p[i]=temp;
         }
     }
  for(i=0;i<N;i++)
   for(j=i;j<N;j++)
     {
       if(m[i].mem<m[j].mem)
         {
           temp=m[j];
           m[j]=m[i];
           m[i]=temp;
         }
     }
}

void main()
{ int ch;
  printf("\nEnter no. of processes : ");
  scanf("%d",&n);
  printf("\nEnter details of %d Processes : ",n);
  for(i=0;i<n;i++)
   {
     printf("\nEnter PID : ");
     scanf("%d",&p[i].pid);
     printf("\nEnter process size : ");
     scanf("%d",&p[i].mem);
   }

  printf("\nEnter no. of memory blocks : ");
  scanf("%d",&N);
  printf("\nEnter size of %d memory blocks : ",N);
  for(i=0;i<N;i++)
   {
     printf("\nEnter memory size : ");
     scanf("%d",&m[i].mem);
   }
  do
   { 
     printf("\nMemory Management Menu");
     printf("\n\n1.First Fit");
     printf("\n2.Best Fit");
     printf("\n3.Worst Fit");
     printf("\n4.Exit");
     scanf("%d",&ch);
     switch(ch)
      {
       case 1 : allo();break;
       case 2 : sort_as();allo();break;
       case 3 : sort_de();allo();break;
       default : printf("\nInvalid Choice!!!");
      }
    }while(ch!=4);

}	
